// ASM FILE created by VMTranslator created by pajdek.
// Compilation date: 2023-01-17 17:05:03.561633
// set SP to 256
@256
D=A
@SP
M=D

// Command(cmd_type='C_CALL', arg_1='Sys.init', arg_2=0)
@output_file$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@R14
M=D
@0
D=A
@R14
M=M+D
@SP
D=M
@R14
MD=D-M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(output_file$ret.1)
// Command(cmd_type='C_FUNCTION', arg_1='Sys.init', arg_2=0)
(Sys.init)

// Command(cmd_type='C_PUSH', arg_1='constant', arg_2=4000)
@4000
D=A
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_POP', arg_1='pointer', arg_2=0)
@SP
AM=M-1
D=M
@THIS
M=D
// Command(cmd_type='C_PUSH', arg_1='constant', arg_2=5000)
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_POP', arg_1='pointer', arg_2=1)
@SP
AM=M-1
D=M
@THAT
M=D
// Command(cmd_type='C_CALL', arg_1='Sys.main', arg_2=0)
@NestedCall.vm$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@R14
M=D
@0
D=A
@R14
M=M+D
@SP
D=M
@R14
MD=D-M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.main
0;JMP
(NestedCall.vm$ret.1)
// Command(cmd_type='C_POP', arg_1='temp', arg_2=1)
@SP
AM=M-1
D=M
@6
M=D
// Command(cmd_type='C_LABEL', arg_1='LOOP', arg_2=None)
(LOOP)
// Command(cmd_type='C_GOTO', arg_1='LOOP', arg_2=None)
@LOOP
0;JMP
// Command(cmd_type='C_FUNCTION', arg_1='Sys.main', arg_2=5)
(Sys.main)
@SP
A=M
M=0
@SP
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@SP
A=M
M=0
@SP
M=M+1

// Command(cmd_type='C_PUSH', arg_1='constant', arg_2=4001)
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_POP', arg_1='pointer', arg_2=0)
@SP
AM=M-1
D=M
@THIS
M=D
// Command(cmd_type='C_PUSH', arg_1='constant', arg_2=5001)
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_POP', arg_1='pointer', arg_2=1)
@SP
AM=M-1
D=M
@THAT
M=D
// Command(cmd_type='C_PUSH', arg_1='constant', arg_2=200)
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_POP', arg_1='local', arg_2=1)
@1
D=A
@LCL
D=M+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// Command(cmd_type='C_PUSH', arg_1='constant', arg_2=40)
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_POP', arg_1='local', arg_2=2)
@2
D=A
@LCL
D=M+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// Command(cmd_type='C_PUSH', arg_1='constant', arg_2=6)
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_POP', arg_1='local', arg_2=3)
@3
D=A
@LCL
D=M+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// Command(cmd_type='C_PUSH', arg_1='constant', arg_2=123)
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_CALL', arg_1='Sys.add12', arg_2=1)
@NestedCall.vm$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@R14
M=D
@1
D=A
@R14
M=M+D
@SP
D=M
@R14
MD=D-M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.add12
0;JMP
(NestedCall.vm$ret.2)
// Command(cmd_type='C_POP', arg_1='temp', arg_2=0)
@SP
AM=M-1
D=M
@5
M=D
// Command(cmd_type='C_PUSH', arg_1='local', arg_2=0)
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_PUSH', arg_1='local', arg_2=1)
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_PUSH', arg_1='local', arg_2=2)
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_PUSH', arg_1='local', arg_2=3)
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_PUSH', arg_1='local', arg_2=4)
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// Command(cmd_type='C_RETURN', arg_1=None, arg_2=None)
@LCL
D=M
@endFrame
M=D
@5
D=A
@endFrame
A=M-D
D=M
@retAddr
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@endFrame
A=M-1
D=M
@THAT
M=D
@endFrame
A=M-1
A=A-1
D=M
@THIS
M=D
@endFrame
A=M-1
A=A-1
A=A-1
D=M
@ARG
M=D
@endFrame
A=M-1
A=A-1
A=A-1
A=A-1
D=M
@LCL
M=D
@retAddr
A=M
0;JMP
// Command(cmd_type='C_FUNCTION', arg_1='Sys.add12', arg_2=0)
(Sys.add12)

// Command(cmd_type='C_PUSH', arg_1='constant', arg_2=4002)
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_POP', arg_1='pointer', arg_2=0)
@SP
AM=M-1
D=M
@THIS
M=D
// Command(cmd_type='C_PUSH', arg_1='constant', arg_2=5002)
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_POP', arg_1='pointer', arg_2=1)
@SP
AM=M-1
D=M
@THAT
M=D
// Command(cmd_type='C_PUSH', arg_1='argument', arg_2=0)
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// Command(cmd_type='C_PUSH', arg_1='constant', arg_2=12)
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// Command(cmd_type='C_RETURN', arg_1=None, arg_2=None)
@LCL
D=M
@endFrame
M=D
@5
D=A
@endFrame
A=M-D
D=M
@retAddr
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@endFrame
A=M-1
D=M
@THAT
M=D
@endFrame
A=M-1
A=A-1
D=M
@THIS
M=D
@endFrame
A=M-1
A=A-1
A=A-1
D=M
@ARG
M=D
@endFrame
A=M-1
A=A-1
A=A-1
A=A-1
D=M
@LCL
M=D
@retAddr
A=M
0;JMP